---
name: release

on:
  push:
    tags:
    - "v*"

jobs:
  build:
    uses: ./.github/workflows/build.yml

  publish-release:
    name: Publish Release
    runs-on: ubuntu-22.04

    permissions:
      contents: write

    needs:
    - build

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          macos-packages-x86_64/*
          macos-packages-arm64/*
          windows-packages-x86_64/*
          linux-packages-amd64/*
          linux-packages-aarch64/*

    - name: Generate env
      run: |
        VERSION="${GITHUB_REF##*/}"
        VERSION="${VERSION#v}"
        echo "VERSION=$VERSION"

        SHA256=$(sha256sum linux-packages-amd64/chdig-$VERSION-x86_64.pkg.tar.zst | cut -d' ' -f1)
    - name: Generate PKGBUILD
      run: |
        set -x
        cat > PKGBUILD <<EOL
        # shellcheck disable=SC2034,SC2154
        # - SC2034 - appears unused.
        # - SC2154 - pkgdir is referenced but not assigned.

        # Maintainer: Azat Khuzhin <a3at.mail@gmail.com>
        pkgname=chdig-bin
        pkgver=$VERSION
        pkgrel=1
        pkgdesc="Dig into ClickHouse with TUI interface (binaries for latest stable version)"
        arch=('x86_64')
        conflicts=("chdig")
        provides=("chdig")
        url="https://github.com/azat/chdig"
        license=('MIT')
        source=(
            "https://github.com/azat/chdig/releases/download/v\$pkgver/chdig-\$pkgver-1-x86_64.pkg.tar.zst"
        )
        sha256sums=(
            '$SHA256'
        )

        package() {
            tar -C "\$pkgdir" -xvf chdig-\$pkgver-1-x86_64.pkg.tar.zst
            rm -f "\$pkgdir/.PKGINFO"
            rm -f "\$pkgdir/.MTREE"
        }
        # vim set: ts=4 sw=4 et
        EOL
        cat PKGBUILD
    - name: Publish to the AUR
      uses: KSXGitHub/github-actions-deploy-aur@v3.0.1
      with:
        pkgname: chdig-bin
        pkgbuild: PKGBUILD
        commit_username: ${{ secrets.AUR_USERNAME }}
        commit_email: ${{ secrets.AUR_EMAIL }}
        ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
        commit_message: Release $VERSION
        # force_push: 'true'
